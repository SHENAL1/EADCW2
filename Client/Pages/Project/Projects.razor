@page "/projects"
@inject IProjectService ProjectService
@inject NavigationManager NavigationManager
@implements IDisposable

<h3>Projects</h3>

@if (ProjectService.Projects.Count == 0)
{
    <span>The Projects are loading...</span>
    <br>
    <b>If the Projects are not getting loaded try login to the system</b>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Project Id</th>
                <th>Project Name</th>
                <th>StartDate</th>
                <th>EndDate</th>
                <th>ProjectStatus</th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var project in ProjectService.Projects)
            {
                <tr>
                    <td>@project.ProjectId</td>
                    <td>@project.ProjectName</td>
                    <td>@project.StartDate</td>
                    <td>@project.EndDate</td>
                    <td>@project.ProjectStatus</td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => ShowProject(project.ProjectId))">View</button>
                    </td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => UpdateProject(project.ProjectId))">Update</button>
                    </td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => DeleteProject(project.ProjectId))">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<CreateProject Project="projectToUpdate"></CreateProject>

@code {

    CW2.Shared.Project projectToUpdate = new CW2.Shared.Project();

    protected override async Task OnInitializedAsync()
    {
        await ProjectService.GetProjects();
        @*This will automatically add the newly created project details to the table*@
        ProjectService.OnChange += StateHasChanged;
    }

    @*This method would navigate to project details page *@
    void ShowProject(int projectId)
    {
        NavigationManager.NavigateTo($"project/{projectId}");
    }

    public void Dispose()
    {
        ProjectService.OnChange -= StateHasChanged;
    }

    @*This is to invoke the update of a project*@
    void UpdateProject(int projectId)
    {
        projectToUpdate = ProjectService.Projects.Find(p => p.ProjectId == projectId);
    }

    @*This is to invoke the delete of a project*@
    void DeleteProject(int projectId)
    {
       ProjectService.DeleteProject(projectId);
    }
}
