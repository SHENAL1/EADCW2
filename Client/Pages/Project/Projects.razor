@page "/projects"
@inject IProjectService ProjectService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@implements IDisposable

<h3 style="text-align:center;">Projects</h3>

@if (ProjectService.Projects.Count == 0)
{
    <span>The Projects are loading...</span>
    <br>
    <b>If the Projects are not getting loaded try login to the system</b>
}
else
{
<p>
    <a class="btn btn-success" href="/createProject"><i class="oi oi-plus"></i> Create</a>
</p>
    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th>Project Id</th>
                <th>Project Name</th>
                <th>StartDate</th>
                <th>EndDate</th>
                <th>ProjectStatus</th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var project in ProjectService.Projects)
            {
                <tr>
                    <td>@project.ProjectId</td>
                    <td>@project.ProjectName</td>
                    <td>@project.StartDate</td>
                    <td>@project.EndDate</td>
                    
                    @if (@project.ProjectStatus == "Todo")
                    {
                        <td style="color: Highlight;"><b>@project.ProjectStatus</b></td>
                    }@if(@project.ProjectStatus == "Inprogress")
                    {
                        <td style="color: orangered;"><b>@project.ProjectStatus</b></td>
                    }@if(@project.ProjectStatus == "Completed")
                    {
                        <td style="color:green;"><b>@project.ProjectStatus</b></td>
                    }
                    <td>
                        <button class="btn btn-primary" @onclick="(() => ShowProject(project.ProjectId))"><i class="oi oi-eye"></i> View</button>
                    </td>
                    <td>
                        <button class="btn btn-dark" @onclick="(() => UpdateProject(project.ProjectId))"><i class="oi oi-pencil"></i> Update</button>
                    </td>
                    <td>
                        <button class="btn btn-danger" @onclick="(() => DeleteProject(project.ProjectId))"><i class="oi oi-trash"></i> Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@*<CreateProject Project="projectToUpdate"></CreateProject>*@

@code {

    CW2.Shared.Project projectToUpdate = new CW2.Shared.Project();

    protected override async Task OnInitializedAsync()
    {
        await ProjectService.GetProjects();
        @*This will automatically add the newly created project details to the table*@
        ProjectService.OnChange += StateHasChanged;
    }

    @*This method would navigate to project details page *@
    void ShowProject(int projectId)
    {
        NavigationManager.NavigateTo($"project/{projectId}");
    }

    public void Dispose()
    {
        ProjectService.OnChange -= StateHasChanged;
    }

    @*This is to invoke the update of a project*@
    void UpdateProject(int projectId)
    {
        @*projectToUpdate = ProjectService.Projects.Find(p => p.ProjectId == projectId);*@
        NavigationManager.NavigateTo($"createProject/{projectId}");
    }

    @*This is to invoke the delete of a project*@
    async void DeleteProject(int projectId)
    {
        @if (await JSRuntime.InvokeAsync<bool>("confirm", $"Do you want to Delete this Project?"))
        {
            await ProjectService.DeleteProject(projectId);
            await JSRuntime.InvokeVoidAsync("alert", $"Company Deleted Successfully!");
        }
    }
}
