@page "/tickets"
@inject ITicketService TicketService
@inject NavigationManager NavigationManager
@implements IDisposable

<h3>Manage Tickets</h3>

@if (TicketService.Tickets.Count == 0)
{
    <span>The Tickets are loading...</span>
    <br>
    <b>If the Tickets are not getting loaded try login to the system</b>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Ticket Id</th>
                <th>Description</th>
                <th>Status</th>
                <th>Project</th>
                <th>User</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ticket in TicketService.Tickets)
            {
            <tr>
                <td>@ticket.TicketId</td>
                <td>@ticket.TicketDescription</td>
                <td>@ticket.TicketStatus</td>
                <td>@ticket.Project</td>
                <td>@ticket.User</td>
                <td>
                    <button class="btn btn-primary" @onclick="(() => ShowTicket(ticket.TicketId))">View</button>
                </td>
            </tr>
            }
        </tbody>
    </table>
}

<CreateTicket></CreateTicket>

@code {
    protected override async Task OnInitializedAsync()
    {
        await TicketService.GetTickets();
        TicketService.OnChange += StateHasChanged;
    }

    @*This method would navigate to Ticket details page *@
    void ShowTicket(int ticketId)
    {
        NavigationManager.NavigateTo($"ticket/{ticketId}");
    }

    public void Dispose()
        {
            TicketService.OnChange -= StateHasChanged;
        }
}
