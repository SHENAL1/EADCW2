@page "/tickets"
@inject ITicketService TicketService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@implements IDisposable

<h3 style="text-align:center;">Manage Tickets</h3>

@if (TicketService.Tickets.Count == 0)
{
    <span>The Tickets are loading...</span>
    <br>
    <b>If the Tickets are not getting loaded try login to the system</b>
}
else
{
<p>
    <a class="btn btn-success" href="/createTicket"><i class="oi oi-plus"></i> Create</a>
</p>
    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th>Ticket Id</th>
                <th>Ticket Name</th>
                <th>Description</th>
                <th>Status</th>
                @*<th>Project</th>*@
                @*<th>User</th>*@
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ticket in TicketService.Tickets)
            {
                <tr>
                    <td>@ticket.TicketId</td>
                    <td>@ticket.TicketName</td>
                    <td>@ticket.TicketDescription</td>
                    @if (@ticket.TicketStatus == "Todo")
                    {
                        <td style="color: Highlight;"><b>@ticket.TicketStatus</b></td>
                    }@if(@ticket.TicketStatus == "Inprogress")
                    {
                        <td style="color: orangered;"><b>@ticket.TicketStatus</b></td>
                    }@if(@ticket.TicketStatus == "Completed")
                    {
                        <td style="color:green;"><b>@ticket.TicketStatus</b></td>
                    }

                    
                    @*<td>@ticket.Project</td>*@
                    @*<td>@ticket.User</td>*@
                    <td>
                        <button class="btn btn-primary" @onclick="(() => ShowTicket(ticket.TicketId))"><i class="oi oi-eye"></i> View</button>
                    </td>
                    <td>
                        <button class="btn btn-dark" @onclick="(() => UpdateTicket(ticket.TicketId))"><i class="oi oi-pencil"></i> Update</button>
                    </td>
                    <td>
                        <button class="btn btn-danger" @onclick="(() => DeleteTicket(ticket.TicketId))"><i class="oi oi-trash"></i> Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@*<CreateTicket Ticket="ticketToUpdate"></CreateTicket>*@

@code {
    CW2.Shared.Ticket ticketToUpdate = new CW2.Shared.Ticket();

    protected override async Task OnInitializedAsync()
    {
        await TicketService.GetTickets();
        TicketService.OnChange += StateHasChanged;
    }

    @*This method would navigate to Ticket details page *@
    void ShowTicket(int ticketId)
    {
        NavigationManager.NavigateTo($"ticket/{ticketId}");
    }

    public void Dispose()
    {
        TicketService.OnChange -= StateHasChanged;
    }

    @*This is to invoke the update of a Ticket*@
    void UpdateTicket(int ticketId)
    {
        
        NavigationManager.NavigateTo($"createTicket/{ticketId}");
    }

    @*This is to invoke the delete of a Ticket*@
    async void DeleteTicket(int ticketId)
    {
        

        @if (await JSRuntime.InvokeAsync<bool>("confirm", $"Do you want to Delete this Ticket?"))
        {
            await TicketService.DeleteTicket(ticketId);
            await JSRuntime.InvokeVoidAsync("alert", $"Company Deleted Successfully!");
        }
    }
}
