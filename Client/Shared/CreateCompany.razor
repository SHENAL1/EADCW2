@page "/createCompany"
@page "/createCompany/{companyId:int}"

@inject ICompanyService CompanyService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

@if (Company.CompanyId == 0)
{
    <h3 style="text-align:center;">Create Company</h3> }
else
{
    <h3 style="text-align:center;">Update @Company.CompanyName</h3>
}

<EditForm Model="Company" OnValidSubmit="HandleCompanySubmit">
    <DataAnnotationsValidator />


    <div style="border: 0.5px solid black; border-radius: 5px; padding: 20px; max-width: 50%; margin-left: 25%; margin-bottom: 50px; background-color:#300c4d; color:#ffffff; ">
        @*<ValidationSummary />*@
        <div class="form-group">
            <b><label>Company Name</label></b>
            <InputText @bind-Value="Company.CompanyName" class="form-control" placeholde="5-30 characters"></InputText>
            <ValidationMessage For="@(()=> Company.CompanyName)"></ValidationMessage>
        </div>
        <div class="form-group">
            <b><label>Company Address</label></b>
            <InputText @bind-Value="Company.CompanyAddress" class="form-control" placeholde="5-100 characters"></InputText>
            <ValidationMessage For="@(()=> Company.CompanyAddress)"></ValidationMessage>
        </div>

        <div class="form-group">
            <b><label>Email</label></b>
            <InputText @bind-Value="Company.CompanyEmail" class="form-control" placeholde="5-30 characters"></InputText>
            <ValidationMessage For="@(()=> Company.CompanyEmail)"></ValidationMessage>
        </div>
        <div class="form-group">
            <b><label>Phone Number</label></b>
            <InputText @bind-Value="Company.CompanyPhoneNo" class="form-control" placeholde="10 digits"></InputText>
            @*<InputNumber @bind-Value="Company.CompanyPhoneNo" class="form-control"></InputNumber>*@
            <ValidationMessage For="@(()=> Company.CompanyPhoneNo)"></ValidationMessage>


        </div>
        <div class="form-group">
            <b><label>Description</label></b>
            <InputTextArea @bind-Value="Company.CompanyDescription" class="form-control" placeholde="10-200 characters"></InputTextArea>
            <ValidationMessage For="@(()=> Company.CompanyDescription)"></ValidationMessage>
        </div>
        <br><br>
        @if (Company.CompanyId == 0)
        {
            <button type="submit" style="margin-left: 40%; max-width: 20%; background-color:#007EA7; " class="btn btn-primary">Create</button> }
        else
        {
            <button type="submit" style="margin-left: 40%; max-width:20%; background-color: #007EA7; " class="btn btn-primary">Update</button>}

        <br><br><br>
    </div>

</EditForm>

@code {

    [Parameter]
    public int CompanyId { get; set; }
    public CW2.Shared.Company Company { get; set; } = new CW2.Shared.Company();

    protected override async Task OnInitializedAsync()
    {
        if (this.CompanyId != 0)
        {
            this.Company = await CompanyService.GetSingleCompany(this.CompanyId);
        }

    }

    async void HandleCompanySubmit()
    {
        await JSRuntime.InvokeVoidAsync("console.log", Company);

        if (Company.CompanyId == 0)
        {
            Console.WriteLine("Create was done");
            await CompanyService.CreateCompany(Company);
            await JSRuntime.InvokeVoidAsync("alert", $"Company was created Successfully!");
            
        }
        else
        {
            Console.WriteLine("Update was done");
            await CompanyService.UpdateCompany(Company, Company.CompanyId);
            await JSRuntime.InvokeVoidAsync("alert", $"Company was updated Successfully!");
        }

        NavigationManager.NavigateTo("companies");


    }}
