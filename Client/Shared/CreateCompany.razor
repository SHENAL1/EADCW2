@inject ICompanyService CompanyService
@inject IJSRuntime JSRuntime

<h3>Create Company</h3>

<EditForm Model="Company" OnSubmit="HandleCompanySubmit">

    <div class="form-group">
        <label>Company Name</label>
        <InputText @bind-Value="Company.CompanyName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Company Address</label>
        <InputText @bind-Value="Company.CompanyAddress" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Email</label>
        <InputText @bind-Value="Company.CompanyEmail" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Phone Number</label>
        <InputText @bind-Value="Company.CompanyPhoneNo" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Description</label>
        <InputText @bind-Value="Company.CompanyDescription" class="form-control"></InputText>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
</EditForm>

@code {
    [Parameter]
    public CW2.Shared.Company CompanyToEdit { get; set; }

    public CW2.Shared.Company Company { get; set; } = new CW2.Shared.Company();

    async void HandleCompanySubmit()
    {
        Console.WriteLine("Submit was done");
        await JSRuntime.InvokeVoidAsync("console.log", Company);

        await CompanyService.CreateCompany(Company);
    }
}
