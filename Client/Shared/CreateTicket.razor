@inject ITicketService TicketService
@inject IJSRuntime JSRuntime

@if (Ticket.TicketId == 0)
{
    <h3>Create Ticket</h3>
}
else
{
    <h3>Update Ticket ID : @Ticket.TicketId </h3>
}


<EditForm Model="Ticket" OnSubmit="HandleTicketSubmit">
    <div class="form-group">
        <label>Ticket Name</label>
        <InputText @bind-Value="Ticket.TicketName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Ticket Description</label>
        <InputText @bind-Value="Ticket.TicketDescription" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Project Description</label>
        <InputText @bind-Value="Ticket.TicketStatus" class="form-control"></InputText>
    </div>
    @*<div class="form-group">
            <label>Start Date</label>
            <InputText @bind-Value="Ticket.Project" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label>End Date</label>
            <InputText @bind-Value="Ticket.User" class="form-control"></InputText>
        </div>*@

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    [Parameter]
    public CW2.Shared.Ticket Ticket { get; set; } = new CW2.Shared.Ticket();

    async void HandleTicketSubmit()
    {
       await JSRuntime.InvokeVoidAsync("console.log", Ticket);

        if (Ticket.TicketId == 0)
        {
            Console.WriteLine("Create was done");
            await TicketService.CreateTicket(Ticket);
        }
        else
        {
            Console.WriteLine("Update was done");
            await TicketService.UpdateTicket(Ticket, Ticket.TicketId);
        }
    }
}
