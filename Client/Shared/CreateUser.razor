@inject IUserService UserService
@inject IJSRuntime JSRuntime

<h3>Create User</h3>

<EditForm Model="User" OnSubmit="HandleUserSubmit">

    <div class="form-group">
        <label>User Name</label>
        <InputText @bind-Value="User.UserName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>First Name</label>
        <InputText @bind-Value="User.FirstName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Last Name</label>
        <InputText @bind-Value="User.LastName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Email</label>
        <InputText @bind-Value="User.UserEmail" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Phone Number</label>
        <InputText @bind-Value="User.UserPhoneNo" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>User Type</label>
        <InputText @bind-Value="User.UserType" class="form-control"></InputText>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
</EditForm>

@code {
    public CW2.Shared.User User { get; set; } = new CW2.Shared.User();

    async void HandleUserSubmit()
    {
        Console.WriteLine("Submit was done");
        await JSRuntime.InvokeVoidAsync("console.log", User);

        await UserService.CreateUser(User);
    }
}
