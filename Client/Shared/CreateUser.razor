@inject IUserService UserService
@inject IJSRuntime JSRuntime

@if (User.UserId == 0)
{
    <h3>Create User</h3>
}
else
{
    <h3>Update @User.UserName </h3>
}


<EditForm Model="User" OnSubmit="HandleUserSubmit">

    <div class="form-group">
        <label>User Name</label>
        <InputText @bind-Value="User.UserName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>First Name</label>
        <InputText @bind-Value="User.FirstName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Last Name</label>
        <InputText @bind-Value="User.LastName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Email</label>
        <InputText @bind-Value="User.UserEmail" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Phone Number</label>
        <InputText @bind-Value="User.UserPhoneNo" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>User Type</label>
        <InputText @bind-Value="User.UserType" class="form-control"></InputText>
    </div>

    <button type="submit" class="btn btn-success">Submit</button>
</EditForm>

@code {
    [Parameter]
    public CW2.Shared.User User { get; set; } = new CW2.Shared.User();

    async void HandleUserSubmit()
    {
        await JSRuntime.InvokeVoidAsync("console.log", User);

        if (User.UserId == 0)
        {
            Console.WriteLine("Create was done");
            await UserService.CreateUser(User);
        }
        else
        {
            Console.WriteLine("Update was done");
            await UserService.UpdateUser(User, User.UserId);
        }
    }
}
